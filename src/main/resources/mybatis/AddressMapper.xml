<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wyh.dao.AddressMapper">
    <resultMap id="BaseResultMap" type="cn.wyh.entity.Address">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="call" property="call" jdbcType="VARCHAR"/>
        <result column="sing" property="sing" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, name, phone, call, sing, address
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from address
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.wyh.entity.Address">
    insert into address (id, user_id, name, 
      phone, call, sing, 
      address)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{call,jdbcType=VARCHAR}, #{sing,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.wyh.entity.Address">
        insert into address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="call != null">
                `call`,
            </if>
            <if test="sing != null">
                sing,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="call != null">
                #{call,jdbcType=VARCHAR},
            </if>
            <if test="sing != null">
                #{sing,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.wyh.entity.Address">
        update address
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="call != null">
                call = #{call,jdbcType=VARCHAR},
            </if>
            <if test="sing != null">
                sing = #{sing,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.wyh.entity.Address">
    update address
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      call = #{call,jdbcType=VARCHAR},
      sing = #{sing,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateSingByUserId">
    update address set sing = 0 where user_id = #{userId}
  </update>

    <select id="selectByUserId" resultType="Address">
    select id, CONCAT(`name`,`call`) as `name`, phone, address, sing from address where user_id = #{userId}
    order by sing desc
  </select>

    <select id="getDefaultAddressByUserId" resultType="Address">
    select * from address where sing = 1 and user_id = #{userId}
  </select>
</mapper>